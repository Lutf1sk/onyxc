// https://refspecs.linuxfoundation.org/elf/

// ----- File Header

ELFCLASS_32	: u8 : 1;
ELFCLASS_64	: u8 : 2;

ELFABI_SYSV	: u8 : 0;
ELFABI_GNU	: u8 : 3;

ELFENC_LSB	: u8 : 1;
ELFENC_MSB	: u8 : 2;

ELFOBJ :: enum u16 {
	REL		: 1,
	EXEC	: 2,
	DYN		: 3,
	CORE	: 4,
};

ELFARCH :: enum u16 {
	I386	: 3,
	AMD64	: 62,
};

ELFMAGIC :: u8[4] { 0x7F, 'E', 'L', 'F' };

ELF64_FileHeader :: struct {
	magic		: u8[4];
	class		: u8;
	enc			: u8;
	header_ver	: u8;
	osabi		: u8;
	osabi_ver	: u8;
	pad			: u8[7];

	objtype		: u16;
	arch		: u16;
	ver			: u32;

	entry		: u64;
	ph_offs		: u64;
	sh_offs		: u64;
	cpuflags	: u32;

	fh_size		: u16;
	ph_size		: u16;
	ph_count	: u16;
	sh_size		: u16;
	sh_count	: u16;

	strtab_index : u16;
};

// ----- Program Header

ELFPH :: enum u32 {
	NULL	: 0,	// Unused segment
	LOAD	: 1,	// Loadable segment
	DYNAMIC	: 2,	// Dynamic linking info
	INTERP	: 3,	// Interpreter name
	NOTE	: 4,	// Auxiliary info
	SHLIB	: 5,	// Reserved
	PHDR	: 6,	// Entry for header table
	TLS		: 7,	// Thread-local storage segment

	X : 1,
	W : 2,
	R : 4,
};

ELF64_ProgHeader :: struct {
	type		: u32;
	flags		: u32;

	offs		: u64;
	vaddr		: u64;
	paddr		: u64;
	file_size	: u64;
	mem_size	: u64;
	align		: u64;
};

// ----- Section Header

ELFSH :: enum u32 {
	NULL			: 0,	// Unused section
	PROGBITS		: 1,	// Program data
	SYMTAB			: 2,	// Symbol table
	STRTAB			: 3,	// String table
	RELA			: 4,	// 'RelAdd' table
	HASH			: 5,	// Symbol hash table
	DYNAMIC			: 6,	// Dynamic linking info
	NOTE			: 7,	// Notes
	NOBITS			: 8,	// Zero-initialized program data
	REL				: 9,	// 'Rel' table
	SHLIB			: 10,	// Reserved
	DYNSYM			: 11,	// Dynamic linker symbol table
	INIT_ARRAY		: 14,	// Constructor array
	FINIT_ARRAY		: 15,	// Destructor array
	PREINIT_ARRAY	: 16,	// Pre-constructor array
	GROUP			: 17,	// Section group
	SYMTAB_SHNDX	: 18,	// Extended section indices
};

// Special section indices
ELFSH_UNDEF		: u16 : 0;		// Undefined section
ELFSH_ABS		: u16 : 0xFFF1;	// Symbol is absolute
ELFSH_COMMON	: u16 : 0xFFF2;	// Symbol labels an unallocated common block
ELFSH_XINDEX	: u16 : 0xFFFF;	// Index is extra table

ELF64_SectHeader :: struct {
	name	: u32;
	type	: u32;
	flags	: u64;

	addr	: u64;
	offs	: u64;
	size	: u64;

	link	: u32;
	info	: u32;

	addr_align	: u64;
	ent_size	: u64;
};

// ----- Relocation Table

ELFREL :: enum u64 {
	X64_NONE		: 0,	// No relocation
	X64_64			: 1,	// Direct 64-bit
	X64_PC32		: 2,	// Sign-extended PC relative 32-bit
	X64_GOT32		: 3,	// 32-bit GOT entry
	X64_PLT32		: 4,	// 32-bit PLT address
	X64_COPY		: 5,	// Runtime symbol copy
	X64_GLOB_DAT	: 6,	// Create GOT entry
	X64_JMP_SLOT	: 7,	// Create PLT entry
	X64_RELATIVE	: 8,	// 64-bit adjust by program base
	X64_GOTPCREL	: 9,	// 32-bit signed PC relative offset to GOT
	X64_32			: 10,	// Zero-extended direct 32-bit
	X64_32S			: 11,	// Sign-extended direct 32-bit
	X64_16			: 12,	// Zero-extended direct 16-bit
	X64_PC16		: 13,	// Sign-extended PC relative 16-bit
	X64_8			: 14,	// Zero-extended direct 8-bit
	X64_PC8			: 15,	// Sign-extended PC relative 8-bit

	X64_TPOFF64		: 18,	// Offset from thread-pointer to a thread local variable

	X64_IRELATIVE	: 37,	// 64-bit adjust by program base (indirect)

	TYPE_MASK_64	: 0x00000000FFFFFFFF,
	SYM_MASK_64		: 0xFFFFFFFF00000000,
	SYM_SHIFT_64	: 32,
};

// Located in ELFSH_REL
ELF64_Rel :: struct {
	offs	: u64;
	info	: u64;
};

// Located in ELFSH_RELA
ELF64_RelAdd :: struct {
	offs	: u64;
	info	: u64;
	addend	: i64;
};

// ----- Dynamic Linking Information

ELFDYN :: enum u64 {
	NULL			: 0,	// Marks end of dynamic section
	NEEDED			: 1,	// Name of needed shared object
	PLTRELSZ		: 2,	// Size of PLT relocs
	PLTGOT			: 3,	// CPU defined value
	HASH			: 4,	// Offset of symbol hash table
	STRTAB			: 5,	// Offset of string table
	SYMTAB			: 6,	// Offset of symbol table
	RELA			: 7,	// Offset of 'RelAdd' relocs
	RELASZ			: 8,	// Total size of 'RelAdd' relocs
	RELAENT			: 9,	// Size of one 'RelAdd' reloc
	STRSZ			: 10,	// Size of string table
	SYMENT			: 11,	// Size of one symbol table entry
	INIT			: 12,	// Offset of init function
	FINI			: 13,	// Offset of termination function
	SONAME			: 14,	// Name of shared object
	RPATH			: 15,	// Library search path (deprecated)
	SYMBOLIC		: 16,	// Symbol search offset
	REL				: 17,	// Address of 'Rel' relocs
	RELSZ			: 18,	// Total size of 'Rel' relocs
	RELENT			: 19,	// Size of one 'Rel' reloc
	PLTREL			: 20,	// PLT reloc type
	DEBUG			: 21,	// Unspecified
	TEXTREL			: 22,	// Reloc can modify .text
	JMPREL			: 23,	// Offset of PLT relocs
	BIND_NOW		: 24,	// Process relocations of object
	INIT_ARRAY		: 25,	// Array of init function offsets
	FINI_ARRAY		: 26,	// Array of termination function offsets
	INIT_ARRAYSZ	: 27,	// Size of ELFDYN_INIT_ARR
	FINI_ARRAYSZ	: 28,	// Size of ELFDYN_FINI_ARR
	RUNPATH			: 29,	// Library search path
	FLAGS			: 30,	// Flags for loaded object
};

ELF64_Dyn :: struct {
	type	: i64;
	val		: u64;
};

// ----- Symbol Table

ELFSYM :: enum u8 {
	// Binding
	LOCAL		: 0x00,
	GLOBAL		: 0x10,
	WEAK		: 0x20,

	// Type
	NOTYPE		: 0,
	OBJECT		: 1,	// Data object
	FUNC		: 2,	// Function or executable code
	SECTION		: 3,	// Section
	FILE		: 4,	// Symbol name is the name of a source file
	COMMON		: 5,	// Uninitialized common block
	TLS			: 6,	// Thread-Local-Storage

	BIND_MASK	: 0xF0,
	TYPE_MASK	: 0x0F,

	// Visibility ('other' field)
	DEFAULT		: 0,	// Use binding type
	INTERNAL	: 1,	// Local
	HIDDEN		: 2,	// Local
	PROTECTED	: 3,	// Prioritize over all external definitions
};

ELF64_Sym :: struct {
	name		: u32;
	info		: u8;
	other		: u8;
	sh_index	: u16;
	val			: u64;
	size		: u64;
};

