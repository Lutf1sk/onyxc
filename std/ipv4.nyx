import "std/str.nyx", "std/net.nyx";

ipv4_parse_addr :: u8(str u8[], out sockaddr_in_t*) {
	nums : u8[][5];
	j : usz = 0;

	num_start := str.data;
	for usz i..str.count {
		c := str[i];
		if c == '.' {
			if j >= 3u {
				return 1;
			}
			nums[j++] = num_start[0..usz:(i - (num_start - str.data))];
			num_start = str.data + i + 1;
		}
		if c == ':' {
			if j != 3u {
				return 1;
			}
			nums[j++] = num_start[0..usz:(i - (num_start - str.data))];
			num_start = str.data + i + 1;
		}
	}
	if j < 3u {
		return 1;
	}
	nums[j] = num_start[0..usz:(str.count - (num_start - str.data))];

	addr : u32 = 0;
	for usz i..4 {
		v: u64;
		if stou(nums[i], &v) || v > 0xFF {
			return 1;
		}
		addr |= v << i * 8;
	}

	if j == 4u {
		v: u64;
		if stou(nums[4], &v) || v > 0xFFFF {
			return 1;
		}
		out.sin_port = hton16(v);
	}

	out.sin_addr = addr;
	return 0;
};

